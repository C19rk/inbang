{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, PAYPAL_PAYMENT_REQUEST, PAYPAL_PAYMENT_SUCCESS, PAYPAL_PAYMENT_FAIL, PAYPAL_CANCEL_SUBSCRIPTION_REQUEST, PAYPAL_CANCEL_SUBSCRIPTION_SUCCESS, PAYPAL_CANCEL_SUBSCRIPTION_FAIL } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (username, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/login/\", {\n      username: username,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data)); // Store userInfo in localStorage\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const registration = (first_name, last_name, username, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/registration/\", {\n      first_name,\n      last_name,\n      username,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserSettings = userData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.patch(\"/api/user-settings/\", userData, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n\n    // Optionally, update the userInfo in local storage and state\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.status === 401 ? \"Old password is incorrect!\" : error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const initiatePaypalPayment = () => async dispatch => {\n  try {\n    dispatch({\n      type: PAYPAL_INITIATE_PAYMENT_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"/api/initiate-payment/\");\n    dispatch({\n      type: PAYPAL_INITIATE_PAYMENT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PAYPAL_INITIATE_PAYMENT_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const confirmPaypalPayment = () => async dispatch => {\n  try {\n    dispatch({\n      type: PAYPAL_CONFIRM_PAYMENT_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"/api/handle-payment-confirmation/\");\n    dispatch({\n      type: PAYPAL_CONFIRM_PAYMENT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PAYPAL_CONFIRM_PAYMENT_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","PAYPAL_PAYMENT_REQUEST","PAYPAL_PAYMENT_SUCCESS","PAYPAL_PAYMENT_FAIL","PAYPAL_CANCEL_SUBSCRIPTION_REQUEST","PAYPAL_CANCEL_SUBSCRIPTION_SUCCESS","PAYPAL_CANCEL_SUBSCRIPTION_FAIL","axios","login","username","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","registration","first_name","last_name","email","updateUserSettings","userData","getState","userLogin","userInfo","Authorization","token","patch","status","initiatePaypalPayment","PAYPAL_INITIATE_PAYMENT_REQUEST","PAYPAL_INITIATE_PAYMENT_SUCCESS","PAYPAL_INITIATE_PAYMENT_FAIL","confirmPaypalPayment","PAYPAL_CONFIRM_PAYMENT_REQUEST","PAYPAL_CONFIRM_PAYMENT_SUCCESS","PAYPAL_CONFIRM_PAYMENT_FAIL"],"sources":["C:/Users/Administrator/Desktop/VSCode/In-Bang Website Project/react_app/src/actions/userActions.js"],"sourcesContent":["import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  PAYPAL_PAYMENT_REQUEST,\r\n  PAYPAL_PAYMENT_SUCCESS,\r\n  PAYPAL_PAYMENT_FAIL,\r\n  PAYPAL_CANCEL_SUBSCRIPTION_REQUEST,\r\n  PAYPAL_CANCEL_SUBSCRIPTION_SUCCESS,\r\n  PAYPAL_CANCEL_SUBSCRIPTION_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/login/\",\r\n      { username: username, password: password },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data)); // Store userInfo in localStorage\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const registration =\r\n  (first_name, last_name, username, email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_REGISTER_REQUEST,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/registration/\",\r\n        { first_name, last_name, username, email, password },\r\n        config\r\n      );\r\n      dispatch({\r\n        type: USER_REGISTER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateUserSettings = (userData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.patch(\"/api/user-settings/\", userData, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // Optionally, update the userInfo in local storage and state\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.status === 401\r\n        ? \"Old password is incorrect!\"\r\n        : error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const initiatePaypalPayment = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PAYPAL_INITIATE_PAYMENT_REQUEST });\r\n\r\n    const { data } = await axios.post(\"/api/initiate-payment/\");\r\n    dispatch({ type: PAYPAL_INITIATE_PAYMENT_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PAYPAL_INITIATE_PAYMENT_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const confirmPaypalPayment = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PAYPAL_CONFIRM_PAYMENT_REQUEST });\r\n\r\n    const { data } = await axios.post(\"/api/handle-payment-confirmation/\");\r\n    dispatch({ type: PAYPAL_CONFIRM_PAYMENT_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PAYPAL_CONFIRM_PAYMENT_FAIL, payload: error.message });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}