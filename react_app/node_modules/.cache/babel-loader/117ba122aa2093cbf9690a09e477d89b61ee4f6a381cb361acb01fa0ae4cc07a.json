{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\VSCode\\\\In-Bang Website Project\\\\react_app\\\\src\\\\components\\\\ButtonPay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { paymentPaypalSuccess, updateSubscriptionId } from \"../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonPay = ({\n  type\n}) => {\n  _s();\n  const [{\n    options\n  }, dispatch] = usePayPalScriptReducer();\n  const userLogin = useSelector(state => state.userLogin);\n  const dispatch1 = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: \"resetOptions\",\n      value: {\n        ...options,\n        intent: \"subscription\"\n      }\n    });\n  }, [type]);\n  const handleApprove = (data, actions) => {\n    dispatch1(paymentPaypalSuccess());\n  };\n  const handleCreateSubscription = (data, actions) => {\n    return actions.subscription.create({\n      plan_id: \"YOUR_PLAN_ID_HERE\"\n    }).then(orderId => {\n      dispatch1(updateSubscriptionId(userLogin, orderId));\n      return orderId;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      createSubscription: handleCreateSubscription,\n      onApprove: handleApprove,\n      onError: err => console.error(\"PayPal Error:\", err),\n      style: {\n        layout: \"horizontal\",\n        color: \"gold\",\n        shape: \"rect\",\n        label: \"subscribe\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonPay, \"DSy7zWYDNj2FAl25J5oJwYTzvNE=\", false, function () {\n  return [usePayPalScriptReducer, useSelector, useDispatch];\n});\n_c = ButtonPay;\nexport default ButtonPay;\nvar _c;\n$RefreshReg$(_c, \"ButtonPay\");","map":{"version":3,"names":["React","useEffect","PayPalButtons","usePayPalScriptReducer","useDispatch","useSelector","paymentPaypalSuccess","updateSubscriptionId","jsxDEV","_jsxDEV","ButtonPay","type","_s","options","dispatch","userLogin","state","dispatch1","value","intent","handleApprove","data","actions","handleCreateSubscription","subscription","create","plan_id","then","orderId","style","display","justifyContent","children","createSubscription","onApprove","onError","err","console","error","layout","color","shape","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/VSCode/In-Bang Website Project/react_app/src/components/ButtonPay.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  paymentPaypalSuccess,\r\n  updateSubscriptionId,\r\n} from \"../actions/userActions\";\r\n\r\nconst ButtonPay = ({ type }) => {\r\n  const [{ options }, dispatch] = usePayPalScriptReducer();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const dispatch1 = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"resetOptions\",\r\n      value: {\r\n        ...options,\r\n        intent: \"subscription\",\r\n      },\r\n    });\r\n  }, [type]);\r\n\r\n  const handleApprove = (data, actions) => {\r\n    dispatch1(paymentPaypalSuccess());\r\n  };\r\n\r\n  const handleCreateSubscription = (data, actions) => {\r\n    return actions.subscription\r\n      .create({\r\n        plan_id: \"YOUR_PLAN_ID_HERE\",\r\n      })\r\n      .then((orderId) => {\r\n        dispatch1(updateSubscriptionId(userLogin, orderId));\r\n        return orderId;\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <PayPalButtons\r\n        createSubscription={handleCreateSubscription}\r\n        onApprove={handleApprove}\r\n        onError={(err) => console.error(\"PayPal Error:\", err)}\r\n        style={{\r\n          layout: \"horizontal\",\r\n          color: \"gold\",\r\n          shape: \"rect\",\r\n          label: \"subscribe\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonPay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,aAAa,EAAEC,sBAAsB,QAAQ,yBAAyB;AAC/E,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,oBAAoB,EACpBC,oBAAoB,QACf,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAAC;IAAEC;EAAQ,CAAC,EAAEC,QAAQ,CAAC,GAAGX,sBAAsB,CAAC,CAAC;EACxD,MAAMY,SAAS,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC;EACzD,MAAME,SAAS,GAAGb,WAAW,CAAC,CAAC;EAE/BH,SAAS,CAAC,MAAM;IACda,QAAQ,CAAC;MACPH,IAAI,EAAE,cAAc;MACpBO,KAAK,EAAE;QACL,GAAGL,OAAO;QACVM,MAAM,EAAE;MACV;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,MAAMS,aAAa,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;IACvCL,SAAS,CAACX,oBAAoB,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,MAAMiB,wBAAwB,GAAGA,CAACF,IAAI,EAAEC,OAAO,KAAK;IAClD,OAAOA,OAAO,CAACE,YAAY,CACxBC,MAAM,CAAC;MACNC,OAAO,EAAE;IACX,CAAC,CAAC,CACDC,IAAI,CAAEC,OAAO,IAAK;MACjBX,SAAS,CAACV,oBAAoB,CAACQ,SAAS,EAAEa,OAAO,CAAC,CAAC;MACnD,OAAOA,OAAO;IAChB,CAAC,CAAC;EACN,CAAC;EAED,oBACEnB,OAAA;IAAKoB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,eACxDvB,OAAA,CAACP,aAAa;MACZ+B,kBAAkB,EAAEV,wBAAyB;MAC7CW,SAAS,EAAEd,aAAc;MACzBe,OAAO,EAAGC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAE;MACtDP,KAAK,EAAE;QACLU,MAAM,EAAE,YAAY;QACpBC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE;MACT;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClC,EAAA,CA7CIF,SAAS;EAAA,QACmBP,sBAAsB,EACpCE,WAAW,EACXD,WAAW;AAAA;AAAA2C,EAAA,GAHzBrC,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}