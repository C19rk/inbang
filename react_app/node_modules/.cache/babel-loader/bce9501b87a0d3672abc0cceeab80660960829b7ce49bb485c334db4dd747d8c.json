{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\VSCode\\\\In-Bang Website Project\\\\react_app\\\\src\\\\components\\\\PayPalButton.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { PayPalScriptProvider, PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\nimport { paymentPaypalSuccess, updateSubscriptionId } from \"../actions/userActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PayPalButton = ({\n  type\n}) => {\n  _s();\n  const [{\n    options\n  }, dispatch] = usePayPalScriptReducer();\n  useEffect(() => {\n    dispatch({\n      type: \"resetOptions\",\n      value: {\n        ...options,\n        intent: \"subscription\"\n      }\n    });\n  }, [type]);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const dispatch1 = useDispatch();\n  const handleApprove = (data, actions) => {\n    dispatch1(paymentPaypalSuccess());\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalButton, {\n    createSubscription: (data, actions) => {\n      return actions.subscription.create({\n        plan_id: \"P-4JG214438Y206981WMYSS72Q\"\n      }).then(orderId => {\n        console.log(orderId);\n        dispatch1(updateSubscriptionId(orderId));\n        return orderId;\n      });\n    },\n    onApprove: handleApprove,\n    style: {\n      label: \"subscribe\",\n      color: \"black\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(PayPalButton, \"ezll31hfXwgTjCmUjmBsp0G+2rA=\", false, function () {\n  return [usePayPalScriptReducer, useSelector, useDispatch];\n});\n_c = PayPalButton;\nexport default PaypalButton;\nvar _c;\n$RefreshReg$(_c, \"PayPalButton\");","map":{"version":3,"names":["React","useEffect","useState","PayPalScriptProvider","PayPalButtons","usePayPalScriptReducer","paymentPaypalSuccess","updateSubscriptionId","useDispatch","useSelector","jsxDEV","_jsxDEV","PayPalButton","type","_s","options","dispatch","value","intent","userLogin","state","userInfo","dispatch1","handleApprove","data","actions","createSubscription","subscription","create","plan_id","then","orderId","console","log","onApprove","style","label","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","PaypalButton","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/VSCode/In-Bang Website Project/react_app/src/components/PayPalButton.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  PayPalScriptProvider,\r\n  PayPalButtons,\r\n  usePayPalScriptReducer,\r\n} from \"@paypal/react-paypal-js\";\r\nimport {\r\n  paymentPaypalSuccess,\r\n  updateSubscriptionId,\r\n} from \"../actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst PayPalButton = ({ type }) => {\r\n  const [{ options }, dispatch] = usePayPalScriptReducer();\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"resetOptions\",\r\n      value: {\r\n        ...options,\r\n        intent: \"subscription\",\r\n      },\r\n    });\r\n  }, [type]);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const dispatch1 = useDispatch();\r\n\r\n  const handleApprove = (data, actions) => {\r\n    dispatch1(paymentPaypalSuccess());\r\n  };\r\n\r\n  return (\r\n    <PayPalButton\r\n      createSubscription={(data, actions) => {\r\n        return actions.subscription\r\n          .create({\r\n            plan_id: \"P-4JG214438Y206981WMYSS72Q\",\r\n          })\r\n          .then((orderId) => {\r\n            console.log(orderId);\r\n            dispatch1(updateSubscriptionId(orderId));\r\n            return orderId;\r\n          });\r\n      }}\r\n      onApprove={handleApprove}\r\n      style={{\r\n        label: \"subscribe\",\r\n        color: \"black\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PaypalButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SACEC,oBAAoB,EACpBC,aAAa,EACbC,sBAAsB,QACjB,yBAAyB;AAChC,SACEC,oBAAoB,EACpBC,oBAAoB,QACf,wBAAwB;AAC/B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAAC;IAAEC;EAAQ,CAAC,EAAEC,QAAQ,CAAC,GAAGX,sBAAsB,CAAC,CAAC;EAExDJ,SAAS,CAAC,MAAM;IACde,QAAQ,CAAC;MACPH,IAAI,EAAE,cAAc;MACpBI,KAAK,EAAE;QACL,GAAGF,OAAO;QACVG,MAAM,EAAE;MACV;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,MAAMM,SAAS,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC;EACzD,MAAM;IAAEE;EAAS,CAAC,GAAGF,SAAS;EAC9B,MAAMG,SAAS,GAAGd,WAAW,CAAC,CAAC;EAE/B,MAAMe,aAAa,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;IACvCH,SAAS,CAAChB,oBAAoB,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,oBACEK,OAAA,CAACC,YAAY;IACXc,kBAAkB,EAAEA,CAACF,IAAI,EAAEC,OAAO,KAAK;MACrC,OAAOA,OAAO,CAACE,YAAY,CACxBC,MAAM,CAAC;QACNC,OAAO,EAAE;MACX,CAAC,CAAC,CACDC,IAAI,CAAEC,OAAO,IAAK;QACjBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;QACpBT,SAAS,CAACf,oBAAoB,CAACwB,OAAO,CAAC,CAAC;QACxC,OAAOA,OAAO;MAChB,CAAC,CAAC;IACN,CAAE;IACFG,SAAS,EAAEX,aAAc;IACzBY,KAAK,EAAE;MACLC,KAAK,EAAE,WAAW;MAClBC,KAAK,EAAE;IACT;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAC3B,EAAA,CAzCIF,YAAY;EAAA,QACgBP,sBAAsB,EAYpCI,WAAW,EAEXD,WAAW;AAAA;AAAAkC,EAAA,GAfzB9B,YAAY;AA2ClB,eAAe+B,YAAY;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}