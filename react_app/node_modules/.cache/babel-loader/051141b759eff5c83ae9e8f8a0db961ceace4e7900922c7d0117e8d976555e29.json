{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { userLoginReducer, userRegisterReducer, userUpdateProfileReducer, paypalPaymentReducer, paypalCancelSubscriptionReducer, userUpdateReducer } from \"./reducers/userReducers\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  paypalPayment: paypalPaymentReducer,\n  paypalCancelSubscription: paypalCancelSubscriptionReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  // Add your initial states here\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = configureStore({\n  reducer,\n  preloadedState: initialState,\n  middleware: getDefaultMiddleware => getDefaultMiddleware()\n});\nexport default store;","map":{"version":3,"names":["combineReducers","configureStore","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","paypalPaymentReducer","paypalCancelSubscriptionReducer","userUpdateReducer","reducer","userLogin","userRegister","userUpdateProfile","userUpdate","paypalPayment","paypalCancelSubscription","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","store","preloadedState","middleware","getDefaultMiddleware"],"sources":["C:/Users/Administrator/Desktop/VSCode/In-Bang Website Project/react_app/src/store.js"],"sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  paypalPaymentReducer,\r\n  paypalCancelSubscriptionReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userUpdate: userUpdateReducer,\r\n  paypalPayment: paypalPaymentReducer,\r\n  paypalCancelSubscription: paypalCancelSubscriptionReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  // Add your initial states here\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  preloadedState: initialState,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,SACEC,gBAAgB,EAChBC,mBAAmB,EACnBC,wBAAwB,EACxBC,oBAAoB,EACpBC,+BAA+B,EAC/BC,iBAAiB,QACZ,yBAAyB;AAEhC,MAAMC,OAAO,GAAGR,eAAe,CAAC;EAC9BS,SAAS,EAAEP,gBAAgB;EAC3BQ,YAAY,EAAEP,mBAAmB;EACjCQ,iBAAiB,EAAEP,wBAAwB;EAC3CQ,UAAU,EAAEL,iBAAiB;EAC7BM,aAAa,EAAER,oBAAoB;EACnCS,wBAAwB,EAAER;AAC5B,CAAC,CAAC;AAEF,MAAMS,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMG,YAAY,GAAG;EACnB;EACAX,SAAS,EAAE;IAAEY,QAAQ,EAAEN;EAAoB;AAC7C,CAAC;AAED,MAAMO,KAAK,GAAGrB,cAAc,CAAC;EAC3BO,OAAO;EACPe,cAAc,EAAEH,YAAY;EAC5BI,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC;AAC7D,CAAC,CAAC;AAEF,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}