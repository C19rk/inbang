{"ast":null,"code":"import{combineReducers}from\"redux\";import{configureStore}from\"@reduxjs/toolkit\";import{userLoginReducer,userRegisterReducer,userUpdateProfileReducer,paypalPaymentReducer,paypalCancelSubscriptionReducer}from\"./reducers/userReducers\";const reducer=combineReducers({userLogin:userLoginReducer,userRegister:userRegisterReducer,userUpdateProfile:userUpdateProfileReducer,paypalPayment:paypalPaymentReducer,paypalCancelSubscription:paypalCancelSubscriptionReducer});const userInfoFromStorage=localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):null;const initialState={// Add your initial states here\nuserLogin:{userInfo:userInfoFromStorage}};const store=configureStore({reducer,preloadedState:initialState,middleware:getDefaultMiddleware=>getDefaultMiddleware()});export default store;","map":{"version":3,"names":["combineReducers","configureStore","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","paypalPaymentReducer","paypalCancelSubscriptionReducer","reducer","userLogin","userRegister","userUpdateProfile","paypalPayment","paypalCancelSubscription","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","store","preloadedState","middleware","getDefaultMiddleware"],"sources":["C:/Users/Administrator/Desktop/VSCode/In-Bang Website Project/react_app/src/store.jsx"],"sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  paypalPaymentReducer,\r\n  paypalCancelSubscriptionReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  paypalPayment: paypalPaymentReducer,\r\n  paypalCancelSubscription: paypalCancelSubscriptionReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  // Add your initial states here\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  preloadedState: initialState,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,OAASA,eAAe,KAAQ,OAAO,CACvC,OAASC,cAAc,KAAQ,kBAAkB,CAEjD,OACEC,gBAAgB,CAChBC,mBAAmB,CACnBC,wBAAwB,CACxBC,oBAAoB,CACpBC,+BAA+B,KAC1B,yBAAyB,CAEhC,KAAM,CAAAC,OAAO,CAAGP,eAAe,CAAC,CAC9BQ,SAAS,CAAEN,gBAAgB,CAC3BO,YAAY,CAAEN,mBAAmB,CACjCO,iBAAiB,CAAEN,wBAAwB,CAC3CO,aAAa,CAAEN,oBAAoB,CACnCO,wBAAwB,CAAEN,+BAC5B,CAAC,CAAC,CAEF,KAAM,CAAAO,mBAAmB,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAC5C,IAAI,CAER,KAAM,CAAAG,YAAY,CAAG,CACnB;AACAV,SAAS,CAAE,CAAEW,QAAQ,CAAEN,mBAAoB,CAC7C,CAAC,CAED,KAAM,CAAAO,KAAK,CAAGnB,cAAc,CAAC,CAC3BM,OAAO,CACPc,cAAc,CAAEH,YAAY,CAC5BI,UAAU,CAAGC,oBAAoB,EAAKA,oBAAoB,CAAC,CAC7D,CAAC,CAAC,CAEF,cAAe,CAAAH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}